/*
Напишите функцию f(), которая будет принимать строку text и выводить ее (печатать на экране).
От вас требуется дописать только эту функцию, считайте что функция main() уже объявлена, считывать с консоли ничего не нужно!
Пакет "fmt" уже импортирован!
Sample Input:
Hello!
Sample Output:
Hello!
*/
package main

import "fmt"

// В ответ отправляем только функцию

// 2.1.1
func f(text string) {
	fmt.Println(text)
}

/*
Напишите функцию, находящую наименьшее из четырех введённых в этой же функции чисел.
Входные данные
Вводится четыре числа.
Выходные данные
Необходимо вернуть из функции наименьшее из 4-х данных чисел

Sample Input:
4 5 6 7
Sample Output:
4
*/
// 2.1.2
func minimumFromFour() int {
	//print your code here
	var res int
	var a int
	for i := 0; i < 4; i++ {
		fmt.Scan(&a)
		if i == 0 {
			res = a
		}
		if a < res {
			res = a
		}
	}
	return res
}

/*
Напишите "функцию голосования", возвращающую то значение (0 или 1), которое среди значений ее аргументов x, y, z встречается чаще.
Входные данные
Вводится 3 числа - x, y и z (x, y и z равны 0 или 1).
Выходные данные
Необходимо вернуть значение функции от x, y и z.

Sample Input:
0 0 1
Sample Output:
0
*/
//2.1.3
func vote(x int, y int, z int) int {
	//print your code here
	if x == 0 && y == 0 || x == 0 && z == 0 || y == 0 && z == 0 {
		return 0
	} else {
		return 1
	}
}

/*
Последовательность Фибоначчи определена следующим образом: φ1=1, φ2=1, φn=φn-1+φn-2 при n>1.
Начало ряда Фибоначчи выглядит следующим образом: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...
Напишите функцию, которая по указанному натуральному n возвращает φn.

Входные данные
Вводится одно число n.
Выходные данные
Необходимо вывести  значение φn.

Sample Input:
4
Sample Output:
3
*/
func fibonacci(n int) int {
	//print your code here
	var a []int
	a = make([]int, n+1)
	a[0] = 1
	a[1] = 1
	for i := int(2); i <= n; i += 1 {
		a[i] = a[i-1] + a[i-2]
	}
	return a[n-1]
}

/*
Напишите функцию sumInt, принимающую переменное количество аргументов типа int,
и возвращающую количество полученных функцией аргументов и их сумму.
Пакет "fmt" уже импортирован, функция и пакет main объявлены.

Пример вызова вашей функции:
a, b := sumInt(1, 0)
fmt.Println(a, b)
Результат: 2, 1
*/
func sumInt(a ...int) (k int, s int) {
	k = 0
	s = 0
	for _, e := range a {
		k++
		s += e
	}
	return k, s
}
