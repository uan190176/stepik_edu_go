package main

/*
Внутри функции main (объявлять функцию не нужно) необходимо написать программу:
На стандартный ввод подается 10 целых чисел, разделенных пробелами (числа могут повторяться).
Для чтения из стандартного ввода импортирован пакет fmt.
Вам необходимо вычислить результат выполнения функции work для каждого из полученных чисел. Функция work имеет следующий вид:
func work(x int) int
Результаты вычислений , разделенные пробелами, должны быть напечатаны в строку.

Однако работа функции work занимает слишком много времени. Выделенного вам времени выполнения не хватит на
последовательную обработку каждого числа, поэтому необходимо реализовать кэширование уже готовых результатов
и использовать их в работе.

После завершения работы программы результат выполнения будет дополнен информацией о соблюдении установленного лимита времени выполнения.

Sample Input:
3 1 5 2 3 5 3 0 3 4
Sample Output:
2 0 6 1 2 6 2 -1 2 5 time limit ok
*/
//3.1.1
/*
	var a int
	m := make(map[int]int)
	for i := 0; i < 10; i++ {
		fmt.Scan(&a)
		if _, ok := m[a]; ok {
			fmt.Print(m[a])
		} else {
			m[a] = work(a)
			fmt.Print(m[a])
		}
		fmt.Print(" ")
	}
*/

/*
В ходе анализа результатов переписи населения информация была сохранена в объекте типа map:
groupCity := map[int][]string{
	10:   []string{...}, // города с населением 10-99 тыс. человек
	100:  []string{...}, // города с населением 100-999 тыс. человек
	1000: []string{...}, // города с населением 1000 тыс. человек и более
}
При подготовке важного отчета о городах с населением 100-999 тыс. человек был подготовлен другой объект типа map:
cityPopulation := map[string]int{
	город: население города в тысячах человек,
}
Однако база данных с информацией о точной численности населения содержала ошибки, поэтому в cityPopulation
в т.ч. была сохранена информация о городах, которые входят в другие группы из groupCity.

Ваша программа имеет доступ к обоим указанным отображениям, требуется исправить cityPopulation,
чтобы в ней была сохранена информация только о городах из группы groupCity[100].

Функция main() уже объявлена, доступ к отображениям осуществляется по указанным именам.
По результатам выполнения ничего больше делать не требуется, проверка будет осуществлена автоматически.

//3.1.2
g100 := groupCity[100]
	flag := false
	var s []string
	for key, _ := range cityPopulation {
		flag = false
		for _, v := range g100 {
			if v == key {
				flag = true
				break
			}
		}

		if flag == false {
			//delete(cityPopulation, key)
			s = append(s, key)
		}
	}
	//fmt.Println(s)
	for _, v := range s {
		delete(cityPopulation, v)
	}
*/
