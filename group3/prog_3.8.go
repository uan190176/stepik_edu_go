/*
Напишите функцию которая принимает канал и число N типа int. Необходимо вернуть значение N+1 в канал.
Функция должна называться task().

Внимание! Пакет и функция main уже объявлены, выводить и считывать ничего не нужно!
*/
//3.8.1
package main

func task(c chan int, n int) {
	c <- n + 1
}

/*
Напишите функцию которая принимает канал и строку. Необходимо отправить эту же строку в заданный канал 5 раз, добавив к ней пробел.
Функция должна называться task2().
Внимание! Пакет и функция main уже объявлены, выводить и считывать ничего не нужно!
*/
//3.8.2
func task2(c chan string, s string) {
	for i := 0; i < 5; i++ {
		c <- s + " "
	}
}

/*
Напишите элемент конвейера (функцию), что запоминает предыдущее значение и отправляет значения на следующий этап конвейера только если оно отличается от того, что пришло ранее.
Ваша функция должна принимать два канала - inputStream и outputStream, в первый вы будете получать строки, во второй вы должны отправлять значения без повторов.
В итоге в outputStream должны остаться значения, которые не повторяются подряд. Не забудьте закрыть канал ;)
Функция должна называться removeDuplicates()
Выводить или вводить ничего не нужно!
*/
func removeDuplicates(i chan string, o chan string) {
	var prev string
	defer close(o)
	for curr := range i {
		if curr != prev {
			o <- curr
			prev = curr
		}
	}
}
